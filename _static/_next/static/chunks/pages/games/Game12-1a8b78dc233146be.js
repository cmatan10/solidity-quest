(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[873],{24093:function(e,s,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/games/Game12",function(){return n(57430)}])},83545:function(e,s,n){"use strict";var t=n(85893),o=n(67294),l=n(53637),a=n(39886),i=n(54610),c=n(84082),r=n(49816),d=n(89163),u=n(87261),h=n(45281),p=n(84283),m=n(74855),x=n(44173),f=n(96941);n(71399);var g=n(46050);s.Z=e=>{let{gameData:s,gameFunctions:n}=e,[y,b]=(0,o.useState)({}),[j,C]=(0,o.useState)(""),[k,w]=(0,o.useState)(""),[N,Z]=(0,o.useState)(""),[S,H]=(0,o.useState)(!1),[F,T]=(0,o.useState)(null),[v,B]=(0,o.useState)(null),[_,A]=(0,o.useState)(!1),[I,E]=(0,o.useState)(null),P=(0,o.useRef)(null),{walletAddress:Y,factoryContract:G,nftContract:L,web3:O}=(0,o.useContext)(g.S);(0,o.useEffect)(()=>{O&&O.utils.isAddress(j)&&T(new O.eth.Contract(s.abi,j)),O&&s.abi2&&O.utils.isAddress(k)&&B(new O.eth.Contract(s.abi2,k))},[j,k,O,s.abi,s.abi2]),(0,o.useEffect)(()=>{let e=async()=>{if(Y&&L){let e=await L.methods.balanceOf(Y,s.badgeId).call();Z(e)}};e()},[Y,L,s.badgeId]);let D=(e,s)=>{b({...y,[s]:e.target.value})},M=async()=>{try{H(!0);let e=await G.methods.deploy(s.id).send({from:Y}),n=e.events.DeployInstance;n?(C(O.utils.toChecksumAddress("0x".concat(e.logs[0].topics[1].slice(-40)))),s.abi2&&e.logs[1]&&w(O.utils.toChecksumAddress("0x".concat(e.logs[1].topics[1].slice(-40)))),s.showTransactionHash&&E(e.transactionHash),x.Am.success("Game instance(s) created successfully!")):x.Am.error("Game creation failed.")}catch(e){x.Am.error("Game creation failed. Please ensure your wallet is connected."),console.error(e)}finally{H(!1)}},z=(e,n)=>{n(x.Am,F,y,Y,L,s.badgeId,O,v)};return(0,t.jsxs)(l.Z,{className:"bg-primary-black overflow-hidden",style:{paddingBottom:"30px",minHeight:"100vh"},children:[(0,t.jsx)(f.wp,{}),(0,t.jsx)(x.Ix,{}),(0,t.jsx)("h1",{className:"game-title title-color",style:{paddingTop:"20px",paddingBottom:"20px"},children:(0,t.jsx)("b",{children:s.title})}),(0,t.jsx)(a.Z,{className:"game-card",style:{backgroundColor:"#000000",color:"white",marginBottom:"20px"},children:(0,t.jsx)(i.Z,{children:(0,t.jsxs)("div",{children:[(0,t.jsx)(m.CopyToClipboard,{text:s.code,children:(0,t.jsx)(c.Z,{className:"button-copy",children:"Copy code"})}),(0,t.jsx)(h.Z,{language:"javascript",style:p.YC,ref:P,customStyle:{margin:"0"},children:s.code})]})})}),s.code1&&(0,t.jsx)(a.Z,{className:"game-card",style:{backgroundColor:"#000000",color:"white",marginBottom:"20px"},children:(0,t.jsx)(i.Z,{children:(0,t.jsxs)("div",{children:[(0,t.jsx)(m.CopyToClipboard,{text:s.code1,children:(0,t.jsx)(c.Z,{className:"button-copy",children:"Copy code"})}),(0,t.jsx)(h.Z,{style:p.YC,ref:P,customStyle:{margin:"0"},children:s.code1})]})})}),(0,t.jsx)(a.Z,{className:"game-card",style:{backgroundColor:"#000000",color:"white",marginBottom:"20px"},children:(0,t.jsxs)(i.Z,{children:[(0,t.jsx)(r.Z,{className:"desc-title title-color",children:(0,t.jsx)("b",{children:"Game Description"})}),(0,t.jsx)("p",{children:s.description}),(0,t.jsx)("br",{}),(0,t.jsx)(c.Z,{onClick:M,className:"flex h-fit py-2 px-4 bg-[#25618B] rounded-[12px] gap-[6px]",style:{backgroundColor:"#c97539",color:"white"},children:S?"Creating...":"Create Instance"})]})}),j&&!S&&(0,t.jsx)(a.Z,{className:"game-card",style:{backgroundColor:"#000000",color:"white",marginBottom:"20px"},children:(0,t.jsxs)(i.Z,{children:[(0,t.jsx)("h3",{className:"desc-title title-color",children:(0,t.jsx)("b",{children:"Your Instance Address:"})}),(0,t.jsx)("p",{style:{wordBreak:"break-all",color:"#c97539"},children:j}),v&&(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("h3",{className:"desc-title title-color",children:(0,t.jsx)("b",{children:"Your Hacking Instance Address:"})}),(0,t.jsx)("p",{style:{wordBreak:"break-all",color:"#c97539"},children:k})]})]})}),j&&!S&&s.hint&&(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(c.Z,{onClick:()=>A(!_),className:"flex h-fit py-2 px-4 bg-[#25618B] rounded-[12px] gap-[6px]",style:{backgroundColor:"#355f7d",color:"white",marginBottom:"17px",marginLeft:"12px"},children:_?"Hide Hint":"Show Hint"}),_&&(0,t.jsx)(a.Z,{className:"game-card",style:{backgroundColor:"#000000",color:"white",marginTop:"10px"},children:(0,t.jsxs)(i.Z,{children:[(0,t.jsx)(r.Z,{className:"desc-title title-color",children:(0,t.jsx)("b",{children:"Hint"})}),(0,t.jsxs)("p",{children:[s.hint,s.showTransactionHash&&I&&(0,t.jsxs)("span",{style:{wordBreak:"break-all",color:"#c97539"},children:[" ",I,"."]}),s.hintLink&&(0,t.jsxs)("span",{children:[" You can read more ",(0,t.jsx)("a",{href:s.hintLink,target:"_blank",rel:"noopener noreferrer",style:{color:"#c97539"},children:"here"}),"."]}),s.hintLink2&&(0,t.jsxs)("span",{children:[" and ",(0,t.jsx)("a",{href:s.hintLink,target:"_blank",rel:"noopener noreferrer",style:{color:"#c97539"},children:"here"}),"."]})]})]})})]}),j&&!S&&s.functions.map((e,s)=>(0,t.jsx)(a.Z,{className:"game-card",style:{backgroundColor:"#000000",color:"white",marginBottom:"20px"},children:(0,t.jsxs)(i.Z,{children:[(0,t.jsx)(r.Z,{className:"desc-title title-color",children:(0,t.jsx)("b",{children:e.label})}),e.inputs.map((e,s)=>(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(d.Z,{children:(0,t.jsx)(u.Z,{className:"py-1 rounded-[12px]",style:{color:"black"},placeholder:e.placeholder,onChange:s=>D(s,e.name)})},s),(0,t.jsx)("br",{})]})),(0,t.jsx)(c.Z,{className:"flex h-fit py-2 px-4 bg-[#25618B] rounded-[12px] gap-[6px]",style:{backgroundColor:"#355f7d",color:"white"},onClick:()=>z(e.functionName,n[e.functionName]),children:e.buttonText})]})},s)),N>0&&(0,t.jsx)("div",{style:{textAlign:"center",color:"#c97539",marginTop:"20px"},children:(0,t.jsxs)("strong",{children:["Congratulations! You Got A Badge ",(0,t.jsx)("i",{className:"fas fa-medal",style:{fontSize:"20px"}})]})})]})}},57430:function(e,s,n){"use strict";n.r(s),n.d(s,{default:function(){return d}});var t=n(85893);n(67294);var o=n(83545),l=JSON.parse('[{"inputs":[],"name":"collisionFound","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"guess","type":"bytes"}],"name":"findCollision","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"secretHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}]');let a=async(e,s,n,t,o,l)=>{let{guess:a}=n;if(!/^0x[0-9A-Fa-f]*$/.test(a)){e.error("Invalid input! Please enter a hexadecimal guess.");return}try{await s.methods.findCollision(a).send({from:t}),e.success("Collision found successfully!");let n=await o.methods.balanceOf(t,l).call();n<1&&(await o.methods.mint(l,s.options.address).send({from:t}),e.success("Badge minted successfully!"))}catch(s){console.error("Error in findCollision function:",s),e.error("Collision operation failed: ".concat(s.message))}},i=async(e,s)=>{try{let n=await s.methods.secretHash().call();e.info("Secret Hash: ".concat(n))}catch(s){e.error("Fetching secret hash failed."),console.error(s)}},c=async(e,s)=>{try{let n=await s.methods.collisionFound().call();e.info("Collision Found: ".concat(n?"True":"False"))}catch(s){e.error("Checking collision status failed."),console.error(s)}},r={id:12,title:"Hash Collision",description:"Challenge Solidity's hash functions. Find collisions and match outputs.\n                To solve this puzzle, you need to understand hash functions in Solidity, \n                specifically keccak256 and sha256, as well as how to use the abi.encodePacked function. \n                You'll also need to understand the concept of hash collisions, where different inputs produce the same hashed output.",code:'// SPDX-License-Identifier: MIT\n          pragma solidity ^0.8.10;\n          \n          contract HashCollision {\n              bytes32 public secretHash = keccak256(abi.encodePacked(sha256("secret")));\n              bool public collisionFound = false;\n              \n              function findCollision(bytes memory guess) public {\n                  require(keccak256(abi.encodePacked(guess)) == secretHash, "Not a collision!");\n                  collisionFound = true;\n              }\n          }',abi:l,badgeId:12,hint:"Write a function according to the following interface:\n         function guess() external pure returns (bytes memory secret);",functions:[{label:"Secret Hash",functionName:"secretHash",buttonText:"Fetch Secret Hash",inputs:[]},{label:"Collision Found",functionName:"collisionFound",buttonText:"Check Collision Status",inputs:[]},{label:"Find Collision",functionName:"findCollision",buttonText:"Find Collision",inputs:[{name:"guess",placeholder:"Enter guess for collision"}]}]};var d=()=>(0,t.jsx)(o.Z,{gameData:r,gameFunctions:{findCollision:a,secretHash:i,collisionFound:c}})}},function(e){e.O(0,[817,311,941,774,888,179],function(){return e(e.s=24093)}),_N_E=e.O()}]);