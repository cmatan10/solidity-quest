(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[271],{13786:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/games/Game13",function(){return n(29474)}])},83545:function(e,t,n){"use strict";var a=n(85893),s=n(67294),r=n(53637),i=n(39886),o=n(54610),c=n(84082),l=n(49816),d=n(89163),u=n(87261),m=n(45281),p=n(84283),h=n(74855),y=n(44173),x=n(96941);n(71399);var g=n(46050);t.Z=e=>{let{gameData:t,gameFunctions:n}=e,[b,f]=(0,s.useState)({}),[j,w]=(0,s.useState)(""),[N,k]=(0,s.useState)(""),[C,S]=(0,s.useState)(""),[Z,_]=(0,s.useState)(!1),[T,A]=(0,s.useState)(null),[D,v]=(0,s.useState)(null),[B,E]=(0,s.useState)(!1),[I,P]=(0,s.useState)(null),F=(0,s.useRef)(null),{walletAddress:H,factoryContract:U,nftContract:G,web3:M}=(0,s.useContext)(g.S);(0,s.useEffect)(()=>{M&&M.utils.isAddress(j)&&A(new M.eth.Contract(t.abi,j)),M&&t.abi2&&M.utils.isAddress(N)&&v(new M.eth.Contract(t.abi2,N))},[j,N,M,t.abi,t.abi2]),(0,s.useEffect)(()=>{let e=async()=>{if(H&&G){let e=await G.methods.balanceOf(H,t.badgeId).call();S(e)}};e()},[H,G,t.badgeId]);let O=(e,t)=>{f({...b,[t]:e.target.value})},Y=async()=>{try{_(!0);let e=await U.methods.deploy(t.id).send({from:H}),n=e.events.DeployInstance;n?(w(M.utils.toChecksumAddress("0x".concat(e.logs[0].topics[1].slice(-40)))),t.abi2&&e.logs[1]&&k(M.utils.toChecksumAddress("0x".concat(e.logs[1].topics[1].slice(-40)))),t.showTransactionHash&&P(e.transactionHash),y.Am.success("Game instance(s) created successfully!")):y.Am.error("Game creation failed.")}catch(e){y.Am.error("Game creation failed. Please ensure your wallet is connected."),console.error(e)}finally{_(!1)}},X=(e,n)=>{n(y.Am,T,b,H,G,t.badgeId,M,D)};return(0,a.jsxs)(r.Z,{className:"bg-primary-black overflow-hidden",style:{paddingBottom:"30px",minHeight:"100vh"},children:[(0,a.jsx)(x.wp,{}),(0,a.jsx)(y.Ix,{}),(0,a.jsx)("h1",{className:"game-title title-color",style:{paddingTop:"20px",paddingBottom:"20px"},children:(0,a.jsx)("b",{children:t.title})}),(0,a.jsx)(i.Z,{className:"game-card",style:{backgroundColor:"#000000",color:"white",marginBottom:"20px"},children:(0,a.jsx)(o.Z,{children:(0,a.jsxs)("div",{children:[(0,a.jsx)(h.CopyToClipboard,{text:t.code,children:(0,a.jsx)(c.Z,{className:"button-copy",children:"Copy code"})}),(0,a.jsx)(m.Z,{language:"javascript",style:p.YC,ref:F,customStyle:{margin:"0"},children:t.code})]})})}),t.code1&&(0,a.jsx)(i.Z,{className:"game-card",style:{backgroundColor:"#000000",color:"white",marginBottom:"20px"},children:(0,a.jsx)(o.Z,{children:(0,a.jsxs)("div",{children:[(0,a.jsx)(h.CopyToClipboard,{text:t.code1,children:(0,a.jsx)(c.Z,{className:"button-copy",children:"Copy code"})}),(0,a.jsx)(m.Z,{style:p.YC,ref:F,customStyle:{margin:"0"},children:t.code1})]})})}),(0,a.jsx)(i.Z,{className:"game-card",style:{backgroundColor:"#000000",color:"white",marginBottom:"20px"},children:(0,a.jsxs)(o.Z,{children:[(0,a.jsx)(l.Z,{className:"desc-title title-color",children:(0,a.jsx)("b",{children:"Game Description"})}),(0,a.jsx)("p",{children:t.description}),(0,a.jsx)("br",{}),(0,a.jsx)(c.Z,{onClick:Y,className:"flex h-fit py-2 px-4 bg-[#25618B] rounded-[12px] gap-[6px]",style:{backgroundColor:"#c97539",color:"white"},children:Z?"Creating...":"Create Instance"})]})}),j&&!Z&&(0,a.jsx)(i.Z,{className:"game-card",style:{backgroundColor:"#000000",color:"white",marginBottom:"20px"},children:(0,a.jsxs)(o.Z,{children:[(0,a.jsx)("h3",{className:"desc-title title-color",children:(0,a.jsx)("b",{children:"Your Instance Address:"})}),(0,a.jsx)("p",{style:{wordBreak:"break-all",color:"#c97539"},children:j}),D&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("h3",{className:"desc-title title-color",children:(0,a.jsx)("b",{children:"Your Hacking Instance Address:"})}),(0,a.jsx)("p",{style:{wordBreak:"break-all",color:"#c97539"},children:N})]})]})}),j&&!Z&&t.hint&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(c.Z,{onClick:()=>E(!B),className:"flex h-fit py-2 px-4 bg-[#25618B] rounded-[12px] gap-[6px]",style:{backgroundColor:"#355f7d",color:"white",marginBottom:"17px",marginLeft:"12px"},children:B?"Hide Hint":"Show Hint"}),B&&(0,a.jsx)(i.Z,{className:"game-card",style:{backgroundColor:"#000000",color:"white",marginTop:"10px"},children:(0,a.jsxs)(o.Z,{children:[(0,a.jsx)(l.Z,{className:"desc-title title-color",children:(0,a.jsx)("b",{children:"Hint"})}),(0,a.jsxs)("p",{children:[t.hint,t.showTransactionHash&&I&&(0,a.jsxs)("span",{children:[" ",I,"."]})]})]})})]}),j&&!Z&&t.functions.map((e,t)=>(0,a.jsx)(i.Z,{className:"game-card",style:{backgroundColor:"#000000",color:"white",marginBottom:"20px"},children:(0,a.jsxs)(o.Z,{children:[(0,a.jsx)(l.Z,{className:"desc-title title-color",children:(0,a.jsx)("b",{children:e.label})}),e.inputs.map((e,t)=>(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(d.Z,{children:(0,a.jsx)(u.Z,{className:"py-1 rounded-[12px]",style:{color:"black"},placeholder:e.placeholder,onChange:t=>O(t,e.name)})},t),(0,a.jsx)("br",{})]})),(0,a.jsx)(c.Z,{className:"flex h-fit py-2 px-4 bg-[#25618B] rounded-[12px] gap-[6px]",style:{backgroundColor:"#355f7d",color:"white"},onClick:()=>X(e.functionName,n[e.functionName]),children:e.buttonText})]})},t)),C>0&&(0,a.jsx)("div",{style:{textAlign:"center",color:"#c97539",marginTop:"20px"},children:(0,a.jsxs)("strong",{children:["Congratulations! You Got A Badge ",(0,a.jsx)("i",{className:"fas fa-medal",style:{fontSize:"20px"}})]})})]})}},29474:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return d}});var a=n(85893);n(67294);var s=n(83545),r=JSON.parse('[{"inputs":[{"internalType":"string","name":"_str","type":"string"},{"internalType":"uint256","name":"_num","type":"uint256"}],"name":"decode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"encodedData","type":"bytes"}],"name":"decodeStringAndUint","outputs":[{"internalType":"string","name":"","type":"string"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"encodeStringAndUint","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"player","outputs":[{"internalType":"string","name":"_string","type":"string"},{"internalType":"uint256","name":"_number","type":"uint256"}],"stateMutability":"view","type":"function"}]');let i=async(e,t,n,a,s,r)=>{let{_str:i,_num:o}=n;if(isNaN(Number(o))){e.error("Invalid input! Please enter a valid number.");return}try{await t.methods.decode(i,Number(o)).send({from:a}),e.success("Data decoded successfully!");let n=await s.methods.balanceOf(a,r).call();n<1&&(await s.methods.mint(r,t.options.address).send({from:a}),e.success("Badge minted successfully!"))}catch(t){console.error("Error in decode function:",t),e.error("Decoding operation failed: ".concat(t.message))}},o=async(e,t)=>{try{let n=await t.methods.encodeStringAndUint().call();e.info("Encoded data: ".concat(n))}catch(t){e.error("Fetching encoded data failed."),console.error(t)}},c=async(e,t)=>{try{let n=await t.methods.player().call();e.info("Player data: ".concat(JSON.stringify(n,(e,t)=>"bigint"==typeof t?t.toString():t)))}catch(t){e.error("Fetching player data failed."),console.error(t)}},l={id:13,title:"Decode Data",description:"Master data decryption in Solidity. Decode and pass data with precision.\n                You need to be familiar with the abi.encode function for encoding data in Solidity, \n                understand how keccak256 works, and use these tools to decode data.",code:'// SPDX-License-Identifier: MIT\n          pragma solidity ^0.8.10;\n          \n          contract DecodeData {\n              bytes public encodeStringAndUint = hex"00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000b4920416d204e756d626572000000000000000000000000000000000000000000";\n              \n              struct Player {\n                  string _string;\n                  uint256 _number;\n              }\n              Player public player;\n              \n              function decode(string memory _str, uint256 _num) external {\n                  bytes memory encodedData = abi.encode(_str, _num);\n                  require(keccak256(encodedData) == keccak256(encodeStringAndUint), "The Answer is incorrect");\n                  player = Player(_str, _num);\n              }\n          }',abi:r,badgeId:13,hint:"Use the decodeparameters function from the web3js library. For more info, check:\n         https://web3js.readthedocs.io/en/v1.7.1/web3-eth-abi.html#decodeparameters.\n         Alternatively, write a function as follows: function decode(bytes memory encodedData) external pure returns (string memory, uint256);",functions:[{label:"Encoded String and Uint",functionName:"encodeStringAndUint",buttonText:"Fetch Encoded Data",inputs:[]},{label:"Player Data",functionName:"player",buttonText:"Fetch Player Data",inputs:[]},{label:"Decode Data",functionName:"decode",buttonText:"Decode",inputs:[{name:"_str",placeholder:"Enter string"},{name:"_num",placeholder:"Enter number"}]}]};var d=()=>(0,a.jsx)(s.Z,{gameData:l,gameFunctions:{decode:i,encodeStringAndUint:o,player:c}})}},function(e){e.O(0,[817,311,941,774,888,179],function(){return e(e.s=13786)}),_N_E=e.O()}]);